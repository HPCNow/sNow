#!/bin/bash
# This is the sNow! Command Line Interface 
# Developed by Jordi Blasco <jordi.blasco@hpcnow.com>
# For more information, visit the official website : www.hpcnow.com/snow
#
#set -xv
readonly SNOWPATH=$(dirname "$0")
readonly PROGNAME=$(basename "$0")
#Logging
readonly LOGFILE=/tmp/snow-install.log
readonly RETAIN_NUM_LINES=10
# Load the configuration
SNOW_PATH=/sNow
SNOW_HOME=${SNOW_PATH}/home
SNOW_SOFT=${SNOW_PATH}/easybuild
SNOW_CONF=${SNOW_PATH}/snow-configspace
SNOW_UTIL=${SNOW_PATH}/snow-utils
SNOW_TOOL=${SNOW_PATH}/snow-tools
readonly CONFIG_FILE=${SNOW_PATH}/etc/snow.conf
readonly ENTERPRISE_EXTENSIONS=${SNOW_PATH}/share/enterprise_extensions.sh
readonly SNOW_DOMAINS=${SNOW_PATH}/etc/domains.conf
readonly SNOW_ACTIVE_DOMAINS=${SNOW_PATH}/etc/active-domains.conf
readonly SELF_ACTIVE_DOMAINS=$(cat ${SNOW_DOMAINS} | grep -v ^# | gawk '{print $1}' || echo "no gawk")
readonly opt1=$1
readonly opt2=$2
readonly opt3=$3
readonly opt4=$4
readonly opt5=$5
declare -A CLUSTERS
HAS_EE=false
#logsetup

if [[ -f ${CONFIG_FILE} ]]; then
    source ${CONFIG_FILE}
    export PDSH_RCMD_TYPE
fi

if [[ -f ${SNOW_TOOL}/share/common.sh ]]; then
    source ${SNOW_TOOL}/share/common.sh
    get_os_distro
    architecture_identification
fi

if [[ -f ${ENTERPRISE_EXTENSIONS} ]]; then
    source ${ENTERPRISE_EXTENSIONS}
    HAS_EE=true
fi

if ! [[ -d ${SNOW_PATH}/log ]]; then
    mkdir ${SNOW_PATH}/log
fi


#
# Start Cases
#
case $opt1 in
    init)
        init
    ;;
    config)
        config
    ;;
    update)
        case $opt2 in
            tools)
                update_tools
            ;;
            configspace)
                update_configspace
            ;;
            template)
                update_xen_image
            ;;
            *)
                echo "Update available options : update_tools, configspace, snow_template"
            ;;
        esac
    ;;
    remove)
        xen_delete $opt2
    ;;
    deploy)
        deploy $opt2 $opt3 $opt4 $opt5
    ;;
    clone)
        clone $opt2 $opt3 $opt4 $opt5
    ;;
    create)
        case $opt2 in
            base)
                create_base
            ;;
            *)
                create $opt2
            ;;
        esac
    ;;
    list)
        case $opt2 in
            all)
                avail_domains
            ;;
            *)
                list $opt2
            ;;
        esac
    ;;
    takeover)
        takeover $opt2
    ;;
    boot)
        case $opt2 in
            domains)  
                boot_domains $opt3 
            ;;
            cluster)
                boot_cluster $opt3 $opt4 $opt5 
            ;;
            *)
                boot $opt2 $opt3 $opt4
            ;;
        esac
    ;;
    cmd)
        ncmd $opt2 $opt3 $opt4 $opt5
    ;;
    reboot)
        nreboot $opt2
    ;;
    reset)
        case $opt2 in
            domains)  
                nreset_domains 
            ;;
            *)
                nreset $opt2
            ;;
        esac
    ;;
    poweroff)
        case $opt2 in
            domains)  
                poweroff_domains 
            ;;
            *)
                npoweroff $opt2
            ;;
        esac
    ;;
    shutdown)
        case $opt2 in
            domains)  
                shutdown_domains 
            ;;
            cluster)
                shutdown_cluster $opt3 
            ;;
            *)
                nshutdown $opt2 
            ;;
        esac
    ;;
    destroy)
        ndestroy $opt2
    ;;
    console)
        nconsole $opt2
    ;;
    uptime)
        nuptime $opt2
    ;;
    help|-help|--help|\?|*)
      shelp
      ;;
  esac

#
# End Cases
#

#
# Log the sNow! activity
#

echo "$(date)    $USER    $@" >> ${SNOW_PATH}/log/snow_actions.log 
