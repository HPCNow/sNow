#### Contents of the preconfiguration file (for jessie)
### Localization
# Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string __LANG__
# The values can also be preseeded individually for greater flexibility.
#d-i debian-installer/language string __LANG__
#d-i debian-installer/country string __COUNTRY__
# Optionally specify additional locales to be generated.
#d-i localechooser/supported-locales multiselect __KEYMAP__
# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select __KEYMAP__

### Network configuration
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select eth0

# To set a different link detection timeout (default is 3 seconds).
# Values are interpreted as seconds.
#d-i netcfg/link_wait_timeout string 10

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
#d-i netcfg/dhcp_timeout string 60
#d-i netcfg/dhcpv6_timeout string 60

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain


### Account setup
d-i passwd/root-login boolean true
d-i passwd/make-user boolean false
# Root password, either in clear text
d-i passwd/root-password password __MASTER_PASSWORD__
d-i passwd/root-password-again password __MASTER_PASSWORD__
# or encrypted using an MD5 hash.
#d-i passwd/root-password-crypted password $6$37URHcnq$rX3A295A5lWqPhy08xferZ9qr7v5PqyarFhpTO8xiPw4D0r1dASVswkg9hfCBfYTKsxAfl0LRfq5aoZlLzURw/

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string __TIMEZONE__
#d-i clock-setup/ntp boolean true
#d-i clock-setup/ntp-server string deploy01

### Partitioning
d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string regular

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true


d-i partman-auto/expert_recipe string               \
    boot-root ::                                    \
        20000 20000 20000 ext4                      \
            $primary{ } $bootable{ }                \
            method{ format } format{ }              \
            use_filesystem{ } filesystem{ ext4 }    \
            mountpoint{ / }                         \
        .                                           \
        20000 20000 1000000000 ext4                 \
            method{ format } format{ }              \
            use_filesystem{ } filesystem{ ext4 }    \
            mountpoint{ /tmp }                      \
        .                                           \
        8192 8192 8192 linux-swap                   \
            method{ swap } format{ }                \
		.
# The full recipe format is documented in the file partman-auto-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository. This also documents how to specify settings such as file
# system labels, volume group names and which physical devices to include
# in a volume group.

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

### Base system installation
# Configure APT to not install recommended packages by default. Use of this
# option can result in an incomplete system and should only be used by very
# experienced users.
d-i base-installer/install-recommends boolean false
# Select the initramfs generator used to generate the initrd for 2.6 kernels.
d-i base-installer/kernel/linux/initramfs-generators string initramfs-tools

### Apt setup
### Mirror settings
d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/ftp/hostname string deb.debian.org
d-i mirror/ftp/directory string /debian
d-i mirror/suite string jessie
d-i mirror/ftp/proxy string
# Suite to install.
# d-i mirror/suite string testing
# You can choose to install non-free and contrib software.
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true
d-i apt-setup/services-select multiselect security
d-i apt-setup/security_host string security.debian.org
# Additional repositories, local[0-9] available
#d-i apt-setup/local0/repository string \
#       http://your.server/debian squeeze main contrib non-free
#d-i apt-setup/local0/comment string Your local repo
# URL to the public key of the local repository; you must provide a key or
# apt will complain about the unauthenticated repository and so the
# sources.list line will be left commented out
d-i debian-installer/allow_unauthenticated string true
#d-i apt-setup/local0/key string http://your.server/repo-key
#d-i apt-setup/local0/repository string http://www.deb-multimedia.org squeeze main non-free
#d-i apt-setup/local0/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x07DC563D1F41B907
#d-i apt-setup/local1/repository string http://backports.debian.org/debian-backports squeeze-backports main contrib non-free
#d-i apt-setup/local2/repository string http://cran.r-project.org/bin/linux/debian squeeze-cran/
#d-i apt-setup/local2/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x06F90DE5381BA480
#d-i apt-setup/local3/repository string http://debian.fusioninventory.org/debian/ stable main
#d-i apt-setup/local3/key string http://debian.fusioninventory.org/debian/archive.key

# Uncomment this to add multiarch configuration for i386
# d-i apt-setup/multiarch string i386


### Package selection
tasksel tasksel/first multiselect none
# Individual additional packages to install
d-i pkgsel/include string openssh-server less vim gawk python curl jq git ntp openssl ca-certificates tcl python-setuptools lsb-release

# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select none

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and include it on CDs.
# popularity-contest popularity-contest/participate boolean false

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true
d-i grub-installer/bootdev  string /dev/sda

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
#d-i debian-installer/add-kernel-opts string console=tty0 console=ttyS0,115200n8

### Finishing up the installation
# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
d-i preseed/late_command string in-target sed -i 's/PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config; \
apt-install nfs-common ; \
modprobe nfs; \
modprobe nfs_acl; \
in-target mkdir /sNow; \
mount -o nolock __NFS_SERVER__:/sNow /target/sNow; \
mount -o nolock __NFS_SERVER__:__SNOW_HOME__ /target/__SNOW_HOME__; \
in-target /sNow/snow-configspace/boot/templates/postconfig.sh __DEFAULT_TEMPLATE__ ; \
umount /target/sNow; \
umount /target/__SNOW_HOME__

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note
