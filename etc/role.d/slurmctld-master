#!/bin/bash
#
# This file contains recipes to deploy domains using sNow! CLI
# Copyright (C) 2008 Jordi Blasco
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# sNow! Cluster Suite is an opensource project developed by Jordi Blasco <jordi.blasco@hpcnow.com>
# For more information, visit the official website: www.hpcnow.com/snow
#
#SHORT_DESCRIPTION: Installs Slurm mster server and it can setup the system based on the snow.conf
prefix=$1

#  Source our common functions - this will let us install a Debian package.
if [[ -e /usr/share/xen-tools/common.sh ]]; then
    source /usr/share/xen-tools/common.sh
else
    echo "Installation problem"
fi
# Load sNow! configuration
if [[ -e /sNow/snow-tools/etc/snow.conf ]]; then
    declare -A CLUSTERS
    source /sNow/snow-tools/etc/snow.conf
else
    error_msg  "The /sNow/snow-tools/etc/snow.conf is not available."
    error_exit "Please use the /sNow/snow-tools/etc/snow.conf-example to setup your environment."
fi
# Load sNow! functions
if [[ -f /sNow/snow-tools/share/common.sh ]]; then
    source /sNow/snow-tools/share/common.sh
    get_os_distro
    architecture_identification
fi

# Slurmctld Server Setup
SNOW_SLURMCTLD_MASTER=$(gawk '{if($2 ~ /slurmctld-master/){print $1}}' $SNOW_TOOL/etc/domains.conf)
if  [[ ! -z "$SNOW_SLURMCTLD_MASTER" ]]; then 
    installDebianPackage ${prefix} curl pbzip2 bsd-mailx
    chroot ${prefix} /usr/bin/apt-get update -q 
    installDebianPackage ${prefix} slurm-wlm slurm-client 
    chroot ${prefix} /bin/systemctl enable munge.service
    sed -i 's|slurm-llnl|slurm|g' ${prefix}/etc/init.d/slurm* ${prefix}/lib/systemd/system/slurm*.service
    sed -i 's|PIDFile=/var/run/slurm/|PIDFile=/var/run/|g' ${prefix}/lib/systemd/system/slurm*.service
    chroot ${prefix} /bin/ln -s /usr/bin/mail /bin/mail 
    # Check UIDs and GIDs
    if [[ "$(chroot ${prefix} id -u munge)" != "$MUNGE_UID"  &&  "$(chroot ${prefix} id -g munge)" != "$MUNGE_GID" ]]; then
        chroot ${prefix} /usr/sbin/groupmod -g $MUNGE_GID munge
        chroot ${prefix} /usr/sbin/usermod -u $MUNGE_UID -g $MUNGE_GID munge
        chroot ${prefix} /bin/chown -R munge:munge  /etc/munge/ /var/*/munge
    fi
    if [[ "$(chroot ${prefix} id -u slurm)" != "$SLURM_UID"  &&  "$(chroot ${prefix} id -g slurm)" != "$SLURM_GID" ]]; then
        chroot ${prefix} /usr/sbin/groupmod -g $SLURM_GID slurm
        chroot ${prefix} /usr/sbin/usermod -u $SLURM_UID -g $SLURM_GID slurm
        chroot ${prefix} /bin/chown -R slurm:slurm /etc/slurm /var/spool/slurmd /var/spool/slurm /var/log/slurm
    fi
    # Setup Munge key slurm
    # Note that if you alredy have the config files available, no changes will be performed.
    chroot ${prefix} /bin/mkdir -p /var/log/munge /var/lib/munge /etc/munge /var/run/munge
    if [[ ! -e $SNOW_CONF/system_files/etc/munge/munge.key ]]; then
        dd if=/dev/urandom bs=1 count=1024 > ${prefix}/etc/munge/munge.key 
        mkdir -p $SNOW_CONF/system_files/etc/munge
        cp -p ${prefix}/etc/munge/munge.key $SNOW_CONF/system_files/etc/munge/munge.key
    else
        cp -p $SNOW_CONF/system_files/etc/munge/munge.key ${prefix}/etc/munge/munge.key
    fi
    chroot ${prefix} /bin/chown -R munge:munge /var/log/munge /var/lib/munge /etc/munge /var/run/munge
    chroot ${prefix} /bin/chmod 700 /etc/munge
    chroot ${prefix} /bin/chmod 600 /etc/munge/munge.key 
    echo "SLURM_CONF=/etc/slurm/slurm.conf" >> ${prefix}/etc/default/slurmctld
    if [[ -e $SNOW_CONF/system_files/etc/slurm/slurm.conf ]]; then 
        # The current configuration located in $SNOW_CONF/system_files/etc/slurm 
        # will be used for this sNow! domain.
        chroot ${prefix} /bin/mkdir -p /etc/slurm /var/run/slurm /var/spool/slurmd /var/spool/slurm /var/log/slurm
        cp -pr $SNOW_CONF/system_files/etc/slurm ${prefix}/etc/
        chroot ${prefix} /bin/chown -R slurm:slurm /etc/slurm /var/spool/slurmd /var/spool/slurm /var/log/slurm
    else
        # Setup initial Slurm Database configuration based on the environment.
        # Note that if you alredy have the config files available, no changes will be performed.
        chroot ${prefix} /bin/mkdir -p /etc/slurm /var/run/slurm /var/spool/slurmd /var/spool/slurm /var/log/slurm
        cp -pr $SNOW_TOOL/etc/config_template.d/slurmctld/* ${prefix}/etc/slurm/
        sed -i "s|__CONTROL_MACHINE__|$SNOW_SLURMCTLD_MASTER|g" ${prefix}/etc/slurm/slurm.conf
        BACKUP_CONTROLLER=$(gawk '{if($2 ~ /slurmctld-slave/){print $1}}' $SNOW_TOOL/etc/domains.conf)
        if [[ -n "$BACKUP_CONTROLLER" ]]; then
            sed -i "s|#BackupController=__BACKUP_CONTROLLER__|BackupController=$BACKUP_CONTROLLER|g" ${prefix}/etc/slurm/slurm.conf
        fi 
        if [[ -n "$LICENSES" ]]; then
            sed -i "s|#Licenses=__LICENSES__|Licenses=$LICENSES|g" ${prefix}/etc/slurm/slurm.conf
        fi 
        SLURM_COMP=$(gawk 'BEGIN{comp="FALSE"}{if($1 ~ /^SLURM_NODES/){comp="TRUE"}}END{print comp}' $SNOW_TOOL/etc/snow.conf)
        if [[ "$SLURM_COMP" == "TRUE" ]]; then
            sed -i "s|#__INCLUDE_NODES__|include /etc/slurm/nodes.conf|g" ${prefix}/etc/slurm/slurm.conf
            for i in {1..100}; do
                if [[ ! -z ${SLURM_NODES[$i]} ]]; then
                    echo "${SLURM_NODES[$i]}" >> ${prefix}/etc/slurm/nodes.conf
                fi
            done
        fi
        SLURM_PART=$(gawk 'BEGIN{part="FALSE"}{if($1 ~ /^SLURM_PARTITION/){part="TRUE"}}END{print part}' $SNOW_TOOL/etc/snow.conf)
        if [[ "$SLURM_PART" == "TRUE" ]]; then
            sed -i "s|#__INCLUDE_PARTITIONS__|include /etc/slurm/partitions.conf|g" ${prefix}/etc/slurm/slurm.conf
            for i in {1..100}; do
                if [[ ! -z ${SLURM_PARTITION[$i]} ]]; then
                    echo "${SLURM_PARTITION[$i]}" >> ${prefix}/etc/slurm/partitions.conf
                fi
            done
        fi
        SLURMDBD_MASTER=$(gawk '{if($2 ~ /slurmdbd/){print $1}}' $SNOW_TOOL/etc/domains.conf)
        if [[ -n "$SLURMDBD_MASTER" ]]; then
            cp -p $SNOW_TOOL/etc/role.d/first_boot/slurm_create_cluster.sh ${prefix}/usr/local/first_boot/01-slurm_create_cluster.sh
            sed -i "s|#__INCLUDE_LOGGING_AND_ACCOUNTING__|include /etc/slurm/accounting.conf|g" ${prefix}/etc/slurm/slurm.conf
            sed -i "s|__ACCOUNTING_STORAGE_ENFORCE__|$ACCOUNTING_STORAGE_ENFORCE|g" ${prefix}/etc/slurm/accounting.conf
            sed -i "s|__ACCOUNTING_STORAGE_HOST__|$SLURMDBD_MASTER|g" ${prefix}/etc/slurm/accounting.conf
            sed -i "s|__CLUSTER_NAME__|$SLURM_CLUSTER_NAME|g" ${prefix}/etc/slurm/accounting.conf ${prefix}/usr/local/first_boot/01-slurm_create_cluster.sh
        fi
        chroot ${prefix} /bin/mkdir -p /var/run/slurm /var/spool/slurmd /var/spool/slurm /var/log/slurm
        echo "Slurm master has been setup. Please, update the current slurm configuration files to your needs."
        chroot ${prefix} /bin/chown -R slurm:slurm /etc/slurm /var/spool/slurmd /var/spool/slurm /var/log/slurm
        cp -pr ${prefix}/etc/slurm/* $SNOW_CONF/system_files/etc/slurm/
    fi
    if [[ -e $SNOW_CONF/system_files/etc/profile.d/slurm-source.sh ]]; then
        cp -p $SNOW_CONF/system_files/etc/profile.d/slurm-source.* ${prefix}/etc/profile.d/
    else
        cp -p $SNOW_TOOL/etc/config_template.d/slurm_client/slurm-source.* ${prefix}/etc/profile.d/
        cp -p $SNOW_TOOL/etc/config_template.d/slurm_client/slurm-source.* $SNOW_CONF/system_files/etc/profile.d/
    fi
fi

