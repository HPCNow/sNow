#!/bin/bash
# Configure the new image for sNow! HPC suite
# Developed by Jordi Blasco <jordi.blasco@hpcnow.com>
# For more information, visit the official website : www.hpcnow.com/snow
#
#SHORT_DESCRIPTION: Installs and setup Docker Swarm to accomodate docker based services.

prefix=$1

#  Source our common functions - this will let us install a Debian package.
if [[ -e /usr/share/xen-tools/common.sh ]]; then
    source /usr/share/xen-tools/common.sh
else
    echo "Installation problem"
fi
# Load sNow! configuration
if [[ -e /sNow/snow-tools/etc/snow.conf ]]; then
    declare -A CLUSTERS
    source /sNow/snow-tools/etc/snow.conf
else
    error_msg  "The /sNow/snow-tools/etc/snow.conf is not available."
    error_exit "Please use the /sNow/snow-tools/etc/snow.conf-example to setup your environment."
fi
# Load sNow! functions
if [[ -f /sNow/snow-tools/share/common.sh ]]; then
    source /sNow/snow-tools/share/common.sh
    get_os_distro
    architecture_identification
fi

# Setup Swarm Cluster Manager
SWARM_MANAGER=$(gawk '{if($2 ~ /swarm-manager/){print $1}}' $SNOW_TOOL/etc/domains.conf)
SWARM_MANAGER_IP=$(gawk '{if($2 ~ /swarm-manager/){print $4}}' $SNOW_TOOL/etc/domains.conf)
if  [[ ! -z "$SWARM_MANAGER" ]]; then 
    # Install the required packages
    installDebianPackage ${prefix} apt-transport-https ca-certificates curl gnupg2 software-properties-common
    curl -fsSL https://download.docker.com/linux/debian/gpg | chroot ${prefix} /usr/bin/apt-key add -
    chroot ${prefix} /usr/bin/add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    chroot ${prefix} /usr/bin/apt-get -y update
    chroot ${prefix} /usr/bin/apt-get -y install docker-ce
    #chroot ${prefix} /usr/sbin/usermod -aG docker $sNow_USER
    chroot ${prefix} /bin/systemctl enable docker
    curl -L https://github.com/docker/compose/releases/download/1.12.0/docker-compose-`uname -s`-`uname -m` > ${prefix}/usr/local/bin/docker-compose
    chmod +x ${prefix}/usr/local/bin/docker-compose
    cp -p $SNOW_TOOL/etc/role.d/first_boot/deploy_swarm.sh ${prefix}/usr/local/first_boot/01-deploy_swarm.sh
    sed -i "s|__SWARM_ROLE__|manager|g" ${prefix}/usr/local/first_boot/01-deploy_swarm.sh
    sed -i "s|__SWARM_MANAGER_IP__|${SWARM_MANAGER_IP}|g" ${prefix}/usr/local/first_boot/01-deploy_swarm.sh
    sed -i "s|__SNOW_SERVER__|${SNOW_NODES[0]}|g" ${prefix}/usr/local/first_boot/01-deploy_swarm.sh
    sed -i "s|__SWARM_TOKEN_PATH__|${SNOW_CONF}/system_files/etc/docker_swarm.token}|g" ${prefix}/usr/local/first_boot/01-deploy_swarm.sh
    # Check if the configuration file already exists
    if [[ ! -e ${SNOW_CONF}/system_files/etc/docker-compose.yml ]]; then 
        # Transfer the existing file to the final destination
        cp -p $SNOW_TOOL/etc/config_template.d/swarm/docker-compose.yml $SNOW_CONF/system_files/etc/docker-compose.yml
    fi
    cp -p $SNOW_CONF/system_files/etc/docker-compose.yml ${prefix}/root/
fi
