#!/bin/bash
# Configure the new image for sNow! HPC suite
# Developed by Jordi Blasco <jordi.blasco@hpcnow.com>
# For more information, visit the official website : www.hpcnow.com/snow
#

prefix=$1

#  Source our common functions - this will let us install a Debian package.
if [[ -e /usr/share/xen-tools/common.sh ]]; then
    . /usr/share/xen-tools/common.sh
else
    echo "Installation problem"
fi
# Load sNow! configuration
if [[ -e /sNow/snow-tools/etc/snow.conf ]]; then
    . /sNow/snow-tools/etc/snow.conf
else
    echo "The /sNow/snow-tools/etc/snow.conf is not available."
    echo "Please use the /sNow/snow-tools/etc/snow.conf-example to setup your environment."
    exit 1
fi

# NTP Server Setup
SNOW_NTP_SERVER=$(gawk '{if($2 ~ /proxy/){print $4}}' $SNOW_TOOL/etc/domains.conf)
NTP_SERVER="${SITE_NTP_SERVER:-3.pool.ntp.org}"
if  [[ ! -z "$SNOW_NTP_SERVER" ]]; then 
    installDebianPackage ${prefix} ntp
    if [[ -e /sNow/snow-configspace/system_files/etc/ntp_server.conf ]]; then 
        cp -pr /sNow/snow-configspace/system_files/etc/ntp_server.conf ${prefix}/etc/ntp.conf
    else
        cp -p /sNow/snow-tools/etc/config_template.d/ntp_client/ntp.conf /sNow/snow-configspace/system_files/etc/ntp_server.conf
        echo "restrict ${NET_SNOW[2]}0 mask ${NET_SNOW[3]} notrust" >> /sNow/snow-configspace/system_files/etc/ntp_server.conf
        sed -i "s/__NTP_SERVER__/$NTP_SERVER/g" /sNow/snow-configspace/system_files/etc/ntp_server.conf
        chmod 644 /sNow/snow-configspace/system_files/etc/ntp_server.conf
        cp -p /sNow/snow-configspace/system_files/etc/ntp_server.conf ${prefix}/etc/ntp.conf
    fi
fi

# Proxy Server Setup
SNOW_PROXY_SERVER=$(gawk '{if($2 ~ /proxy/){print $4}}' $SNOW_TOOL/etc/domains.conf)
SNOW_PROXY_PORT=8080
if  [[ ! -z "$SNOW_PROXY_SERVER" ]]; then 
    installDebianPackage ${prefix} squid3
    mkdir -p /var/log/squid
    chown proxy:proxy /var/log/squid
    if [[ -e /sNow/snow-configspace/system_files/etc/squid3 ]]; then 
        cp -pr /sNow/snow-configspace/system_files/etc/squid3/* ${prefix}/etc/squid3/
    else
        mkdir -p /sNow/snow-configspace/system_files/etc/squid3
        cp -pr /sNow/snow-tools/etc/config_template.d/squid3/* /sNow/snow-configspace/system_files/etc/squid3/
        sed -i "s|__ALLOWED_HOSTS__|${NET_SNOW[2]}0/${NET_SNOW[3]}|g" /sNow/snow-configspace/system_files/etc/squid3/*
        sed -i "s|__PROXY_SERVER__|$SNOW_PROXY_SERVER|g" /sNow/snow-configspace/system_files/etc/squid3/*
        sed -i "s/__PROXY_PORT__/$SNOW_PROXY_PORT/g" /sNow/snow-configspace/system_files/etc/squid3/*
        chmod 644 /sNow/snow-configspace/system_files/etc/squid3/*
        cp -p /sNow/snow-configspace/system_files/etc/squid3/* ${prefix}/etc/squid3/
    fi
fi

# SMTP SmartHost Setup
SNOW_MAIL_SERVER=$(gawk '{if($2 ~ /proxy/){print $4}}' $SNOW_TOOL/etc/domains.conf)
if  [[ ! -z "$SNOW_MAIL_SERVER" ]]; then 
    # The following line fixes a issue with exim installation
    chroot ${prefix} /usr/sbin/addgroup --system Debian-exim --force-badname
    installDebianPackage ${prefix} exim4-daemon-light exim4-config openssl 
    if [[ -e /sNow/snow-configspace/system_files/etc/exim4 ]]; then 
        cp -pr /sNow/snow-configspace/system_files/etc/exim4/* ${prefix}/etc/exim4/
    else
        chroot ${prefix} /usr/bin/debconf-set-selections <<CONF
exim4-config    exim4/hide_mailname boolean false
exim4-config    exim4/dc_localdelivery select mbox format in /var/mail/
exim4-config    exim4/dc_relay_nets string ${NET_SNOW[2]}0/${NET_SNOW[3]}
exim4-config    exim4/dc_minimaldns boolean false
exim4-config    exim4/dc_other_hostnames string $DOMAIN
exim4-config    exim4/use_split_config boolean true
exim4-config    exim4/mailname string $GUEST_FQDN
exim4-config    exim4/dc_postmaster string snow
exim4-config    exim4/no_config boolean true
exim4-config    exim4/dc_local_interfaces string 127.0.0.1 ; $SNOW_MAIL_SERVER ; ::1
exim4-config    exim4/dc_eximconfig_configtype select internet site; mail is sent and received directly using SMTP
CONF
        if  [[ ! -z "$SITE_MAIL_SERVER" ]]; then 
            echo "exim4-config    exim4/dc_smarthost string $SITE_MAIL_SERVER" | chroot ${prefix} /usr/bin/debconf-set-selections
            echo "exim4-config    exim4/dc_eximconfig_configtype select mail sent by smarthost; received via SMTP or fetchmail" | chroot ${prefix} /usr/bin/debconf-set-selections
        fi
        if  [[ ! -z "$SITE_MAIL_SERVER" && ! -z "$SITE_MAIL_USER" && ! -z "$SITE_MAIL_PASSWD" ]]; then 
            echo "$SITE_MAIL_SERVER:$SITE_MAIL_USER:$SITE_MAIL_PASSWD" >> /etc/exim4/passwd.client
        fi
        chroot ${prefix} /usr/bin/debconf-show exim4-config
        cp -pr ${prefix}/etc/exim4 /sNow/snow-configspace/system_files/etc/
    fi
fi

