#!/bin/bash
# Configure the new image for sNow! HPC suite
# Developed by Jordi Blasco <jordi.blasco@hpcnow.com>
# For more information, visit the official website : www.hpcnow.com/snow
#
#SHORT_DESCRIPTION: Installs ElasticSearch master node and allows self discovery of master nodes and data nodes.

prefix=$1

#  Source our common functions - this will let us install a Debian package.
if [[ -e /usr/share/xen-tools/common.sh ]]; then
    source /usr/share/xen-tools/common.sh
else
    echo "Installation problem"
fi
# Load sNow! configuration
if [[ -e /sNow/snow-tools/etc/snow.conf ]]; then
    declare -A CLUSTERS
    source /sNow/snow-tools/etc/snow.conf
else
    error_msg  "The /sNow/snow-tools/etc/snow.conf is not available."
    error_exit "Please use the /sNow/snow-tools/etc/snow.conf-example to setup your environment."
fi
# Load sNow! functions
if [[ -f /sNow/snow-tools/share/common.sh ]]; then
    source /sNow/snow-tools/share/common.sh
    get_os_distro
    architecture_identification
fi

# Get the IP of the server offering this service
SNOW_ELASTICSEARCH_MASTER=$(gawk '{if($2 ~ /elasticserver-data/){print $4}}' $SNOW_TOOL/etc/domains.conf)
if  [[ ! -z "$SNOW_ELASTICSEARCH_MASTER" && ! -z "$SITE_ELASTICSEARCH_MASTER" ]]; then 
    ELASTICSEARCH_MASTER=$SNOW_ELASTICSEARCH_MASTER
else
    ELASTICSEARCH_MASTER="${SITE_ELASTICSEARCH_MASTER:-$SNOW_ELASTICSEARCH_MASTER}"
fi

if  [[ ! -z "$ELASTICSEARCH_MASTER" ]]; then 
    # Install the required packages
    wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | ${prefix}/usr/bin/apt-key add -
    echo "deb https://artifacts.elastic.co/packages/5.x/apt stable main" > ${prefix}/etc/apt/sources.list.d/elastic-5.x.list
    installDebianPackage ${prefix} elasticsearch
    # Check if the configuration file already exists
    if [[ -e /sNow/snow-configspace/system_files/etc/elasticsearch/elasticsearch.yml]]; then 
        # Transfer the existing file to the final destination
        cp -p /sNow/snow-configspace/system_files/etc/elasticsearch/elasticsearch.yml ${prefix}/etc/elasticsearch/elasticsearch.yml
    else
        # set elasticsearch nodes 
        #ES_NODES='["es-node-01", "es-node-03"]'
        # Setup kernel parameters
        replace_text ${prefix}/etc/sysctl.conf "^vm.max_map_count" "vm.max_map_count=262144"
        replace_text ${prefix}/etc/sysctl.conf "^net.ipv6.conf.all.disable_ipv6" "net.ipv6.conf.all.disable_ipv6=1"
        replace_text ${prefix}/etc/sysctl.conf "^net.ipv6.conf.default.disable_ipv6" "net.ipv6.conf.default.disable_ipv6=1"
        sysctl -p
 
        # Setup limits for user elasticsearch
        replace_text ${prefix}/etc/sysctl.conf "^elasticsearch soft nofile" "elasticsearch soft nofile 65536"
        replace_text ${prefix}/etc/sysctl.conf "^elasticsearch hard nofile" "elasticsearch hard nofile 65536"
        replace_text ${prefix}/etc/sysctl.conf "^elasticsearch soft memlock" "elasticsearch soft memlock unlimited"
        replace_text ${prefix}/etc/sysctl.conf "^elasticsearch soft memlock" "elasticsearch soft memlock unlimited"
 
        # stop elasticsearch and backup config
        chroot ${prefix} systemctl stop elasticsearch
        bkp /etc/elasticsearch/elasticsearch.yml
 
        # Setup ElasticSearch configuration
        replace_text ${prefix}/etc/elasticsearch/elasticsearch.yml "^cluster.name" "cluster.name: $ES_CLUSTER_NAME"
        replace_text ${prefix}/etc/elasticsearch/elasticsearch.yml "^node.name" "node.name: $ES_NODE_NAME"
        replace_text ${prefix}/etc/elasticsearch/elasticsearch.yml "^network.host" "network.host: 0.0.0.0"
        replace_text ${prefix}/etc/elasticsearch/elasticsearch.yml "^discovery.zen.ping.unicast.hosts" "discovery.zen.ping.unicast.hosts: $ES_NODES"
        # enable elasticsearch
        chroot ${prefix} systemctl enable elasticsearch
    fi
fi
